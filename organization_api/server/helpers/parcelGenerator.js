const express = require('express');
const bodyParser = require('body-parser');
const mongoose = require('mongoose');

const app = express();
app.use(bodyParser.json());

mongoose.connect('mongodb://localhost:27017/deliveryApp', { useNewUrlParser: true, useUnifiedTopology: true });

const parcelSchema = new mongoose.Schema({
  sender: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  status: String,
  timestamps: { type: Date, default: Date.now },
});

app.post('/bot', async (req, res) => {
  try {
    const newParcel = new Parcel({
      sender: botParcel_id,
      status: 'Prepared for delivery', 
    });

    await newParcel.save();
    res.status(201).json({ message: 'Parcel created successfully' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});


function generateParcels() {
  setInterval(async () => {
    try {
      const newParcel = new Parcel({
        sender: amazonDummyUser._id,
        status: 'Prepared for delivery',
      });

      await newParcel.save();

      console.log('Parcel generated by bot');
    } catch (error) {
      console.error(error);
    }
  }, 60 * 60 * 1000); // 1 hour interval
}

generateParcels();

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
