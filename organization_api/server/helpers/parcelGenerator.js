const express = require('express');
const { Pool } = require('pg');

const app = express();
app.use(express.json());

const pool = new Pool({
  user: 'your_username',
  host: 'your_host',
  database: 'your_database',
  password: 'your_password',
  port: 5432,
});

const amazonDummyUser = {
  name: 'Amazon Dummy',
  email: 'amazondummy@amazondummy.amazondummy',
};

app.post('/bot', async (req, res) => {
  try {
    const userResult = await pool.query('INSERT INTO users(name, email) VALUES($1, $2) RETURNING id', [amazonDummyUser.name, amazonDummyUser.email]);
    const senderId = userResult.rows[0].id;

    await pool.query('INSERT INTO parcels(sender_id, status) VALUES($1, $2)', [senderId, 'Prepared for delivery']);

    res.status(201).json({ message: 'Parcel created successfully' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});

function generateParcels() {
  setInterval(async () => {
    try {
      const userResult = await pool.query('INSERT INTO users(name, email) VALUES($1, $2) RETURNING id', [amazonDummyUser.name, amazonDummyUser.email]);
      const senderId = userResult.rows[0].id;

      await pool.query('INSERT INTO parcels(sender_id, status) VALUES($1, $2)', [senderId, 'Prepared for delivery']);

      console.log('Parcel generated by bot');
    } catch (error) {
      console.error(error);
    }
  }, 60 * 60 * 1000);
}

generateParcels();

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
