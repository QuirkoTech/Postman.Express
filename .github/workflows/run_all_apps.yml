name: Postman.Express applications runner

on:
    push:
        branches: ["actions-test"]
    pull_request:
        types: [opened, reopened, synchronize]
        branches: ["main"]

jobs:
    check-frontend-build:
        runs-on: self-hosted
        strategy:
            matrix:
                node-version: [20.x]
                app: [consumer_app, locker_app, driver_app]
        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install Dependencies and Build Frontend App
              run: |
                  npm install
                  npm run build
              working-directory: ${{ matrix.app }}

    deploy:
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        needs: [check-frontend-build]
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up SSH
              env:
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              run: |
                  mkdir -p ~/.ssh
                  echo "mkdir completed with exit code $?"

                  echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
                  echo "write key completed with exit code $?"

                  chmod 600 ~/.ssh/id_rsa
                  echo "chmod completed with exit code $?"

                  eval "$(ssh-agent -s)"
                  echo "ssh-agent started with exit code $?"

                  ssh-add ~/.ssh/id_rsa
                  echo "ssh-add completed with exit code $?"

                  keyscan_output=$(ssh-keyscan -H ${{ secrets.PVM_HOST }} 2>&1)
                  echo "$keyscan_output"
                  echo "$keyscan_output" >> ~/.ssh/known_hosts
                  echo "ssh-keyscan completed with exit code $?"

            - name: Execute deployment commands
              env:
                  HOST: ${{ secrets.PVM_HOST }}
                  USERNAME: ${{ secrets.PVM_USERNAME }}
              run: |
                  ssh -T -o "StrictHostKeyChecking=no" -vvv $USERNAME@$HOST || {
                    echo "SSH connection failed with exit code $?"
                    exit 1
                    } 

                    cd ~/Projects/PostmanExpress || exit 1
                    git pull origin main || exit 1
                    cd consumer_app || exit 1
                    npm i || exit 1
                    npm run build || exit 1
                    pm2 restart consumer_app_api || exit 1
                    cd ../driver_app || exit 1
                    npm i || exit 1
                    npm run build || exit 1
                    pm2 restart driver_app_api || exit 1
                    cd ../locker_app || exit 1
                    npm i || exit 1
                    npm run build || exit 1
                    pm2 restart locker_app_api || exit 1
                    cd ../organization_api || exit 1
                    npm i || exit 1
                    pm2 restart organization_api || exit 1
                    ENDSSH
