name: Postman.Express applications runner

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, reopened, synchronize]
    branches: ["main"]

jobs:
  build-frontend:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]
        app: [consumer_app, locker_app, driver_app]
    steps:
      - uses: actions/checkout@v3
    
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
    
      - name: Install Dependencies and Build Frontend App
        run: |
          npm install
          npm run build
        working-directory: ${{ matrix.app }}


  build-backend:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]
        app: [consumer_app, locker_app, driver_app, organization_api]
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install Dependencies and Run Express API
        run: |
          npm install
          npm run prod-api
        working-directory: ${{ matrix.app }}

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build-frontend, build-backend]
    runs-on: self-hosted
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        ssh-keyscan ${{ secrets.PVM_HOST }} >> ~/.ssh/known_hosts
      
    - name: Execute deployment commands
      env:
          HOST: ${{ secrets.PVM_HOST }}
          USERNAME: ${{ secrets.PVM_USERNAME }}
      run: |
        ssh $USERNAME@$HOST << 'ENDSSH'
          cd ~/Projects/Postman.Express
          git pull origin main
          cd consumer_app
          npm i
          npm run build
          npm run prod-api
          cd ../driver_app
          npm i
          npm run build
          npm run prod-api
          cd ../locker_app
          npm i
          npm run build
          npm run prod-api
          cd ../organization_api
          npm i
          npm run prod-api
        ENDSSH
